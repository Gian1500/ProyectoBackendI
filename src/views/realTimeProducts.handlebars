<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Real Time Products</title>
</head>
<body>
    <h1>Lista de Productos</h1>
    <ul id="product-list">
        {{#each products}}
            <li>
                {{this.title}}: ${{this.price}}
                <button onclick="deleteProduct('{{this.id}}')">Eliminar</button>
            </li>
        {{/each}}
    </ul>

    <form id="add-product-form">
        <input id="product-title" type="text" placeholder="Título" required>
        <input id="product-description" type="text" placeholder="Descripción">
        <input id="product-code" type="text" placeholder="Código">
        <input id="product-price" type="number" step="0.01" placeholder="Precio" required>
        <input id="product-stock" type="number" placeholder="Stock" required>
        <input id="product-category" type="text" placeholder="Categoría">
        <button type="submit">Agregar Producto</button>
    </form>

    <script src="/socket.io/socket.io.js"></script>
    <script>
        const socket = io();

        // Maneja la adición de productos desde el formulario
        document.getElementById('add-product-form').addEventListener('submit', function (event) {
            event.preventDefault();
            const newProduct = {
                title: document.getElementById('product-title').value,
                description: document.getElementById('product-description').value,
                code: document.getElementById('product-code').value,
                price: parseFloat(document.getElementById('product-price').value),
                stock: parseInt(document.getElementById('product-stock').value),
                category: document.getElementById('product-category').value
            };

            socket.emit('product-added', newProduct);

            // Limpiar el formulario
            document.getElementById('add-product-form').reset();
        });

        // Maneja la eliminación de productos
        function deleteProduct(productId) {
            socket.emit('product-deleted', productId);
        }

        // Actualiza la lista de productos en la vista cuando se recibe un evento
        socket.on('product-updated', (products) => {
            const productList = document.getElementById('product-list');
            productList.innerHTML = '';

            products.forEach(product => {
                const li = document.createElement('li');
                li.innerHTML = `${product.title}: $${product.price} <button onclick="deleteProduct('${product.id}')">Eliminar</button>`;
                productList.appendChild(li);
            });
        });
    </script>
</body>
</html>
